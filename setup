#!/bin/bash
# Usage: dotfiles <dotfiles path> <hookdotfiles | unlink>

# log message
# $1: message level
# $2: text
# $3: error switch
msg () {
  local PREFIX=$(printf '  %.0s' {1..$1})
  PREFIX+=$(printf '=%.0s' {1..$1})"> "
  local FONT
  if [ $# -eq 3 ]; then #error switch
    FONT=$(tput setaf 1)$(tput bold)
    PREFIX+="ERROR: "
  else
    FONT=$(tput setaf 6)
  fi
  echo "${FONT}${PREFIX}$2$(tput sgr0)"
}

# Ask user what to do if destination file exists.
# $1: destination path
# returns: choice in $action or $strategy
askUser() {
  location=$1
  local answer
  while [ -z "$answer" ]; do
    echo "What do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all"
    read answer
    echo $answer | grep -E '^(s|S|o|O|b|B)$' > /dev/null 2>&1
    [ $? -ne 0 ] && unset answer
  done

  echo "$answer" | grep -E '^(S|O|B)$' > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    # user has chosen a global strategy
    strategy=$answer
  else
    action=$answer
  fi
}

# Create symlink and all parent directories.
# $1: source path
# $2: destination path
createlink() {
  mkdir --parents $(dirname "$2")
  ln -s "$1" "$2"
}

skip() {
  msg 1 skip
}

# Rename the destination file and then create a symlink.
# $1: source path
# $2: destination path
backup() {
  msg 2 backup
  local BAK=$2.bak
  if [ -e "$BAK" ]; then
    msg 3 "$BAK already exists" error
    msg 3 "skip creating symlink for $1${NOCOLOR}" error
  else
    mv "$2"{,.bak}
    createlink "$1" "$2"
  fi
}

# Remove destination file before creating a symlink.
# $1: source path
# $2: destination path
overwrite() {
  msg 1 overwrite
  rm -rf "$2"
  createlink "$1" "$2"
}

# Create symlinks for all dotfiles.
hookdotfiles() {
  for link in $(find -name '*.symlink'); do
    relpath=${link#./}
    src=$(pwd)/$relpath
    dest=$HOME/.${relpath#*/}
    dest=${dest%.symlink}
    echo "$src -> $dest"

    if [ -e "$dest" ]; then
      msg 1 "File already exists: $dest"
      # ask user what to do if there is no global strategy
      [ -z "$strategy" ] && askUser
      case "$action$strategy" in
        s|S)  skip ;;
        o|O)  overwrite "$src" "$dest" ;;
        b|B)  backup "$src" "$dest" ;;
      esac
    else
      createlink "$src" "$dest"
    fi
    echo
  done
}

# Delete symlinks and restore backups if there are any.
unlink() {
  for link in `find -name '*.symlink'`; do
      dest=$HOME/.${link#./*/}
      dest=${dest%.symlink}
      rm "$dest"
      [[ -e "$dest.bak" ]] && mv "$dest"{.bak,}
  done
}

cd "$1"
case "$2" in
  hookdotfiles) hookdotfiles ;;
  unlink) unlink ;;
esac
